name: Replace Repository with Cookiecutter

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Package name (com.yourname.packagename)'
        required: true
        default: 'com.yourname.packagename'
      display_name:
        description: 'Package display name'
        required: true
        default: 'Package Display Name'
      version:
        description: 'Package version'
        required: true
        default: '0.1.0'
      description:
        description: 'Package description'
        required: true
        default: 'A VPM package'
      author_name:
        description: 'Author name'
        required: true
        default: 'Your Name'
      author_email:
        description: 'Author email'
        required: true
        default: 'your.email@example.com'
      author_url:
        description: 'Author URL'
        required: true
        default: 'https://github.com/yourusername'
      unity_version:
        description: 'Unity version'
        required: true
        default: '2022.3'
      license:
        description: 'License type'
        required: true
        default: 'MIT'
        type: choice
        options:
          - MIT
          - Apache-2.0
          - GPL-3.0
          - Custom

jobs:
  replace-repository:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Packages
        run: |
          python -m pip install --user cookiecutter~=2.5
          cookiecutter --version
          
      - name: Create cookiecutter config
        run: |
          cat > cookiecutter_config.json << 'EOF'
          {
            "package_name": "${{ github.event.inputs.package_name }}",
            "display_name": "${{ github.event.inputs.display_name }}",
            "version": "${{ github.event.inputs.version }}",
            "description": "${{ github.event.inputs.description }}",
            "author_name": "${{ github.event.inputs.author_name }}",
            "author_email": "${{ github.event.inputs.author_email }}",
            "author_url": "${{ github.event.inputs.author_url }}",
            "unity_version": "${{ github.event.inputs.unity_version }}",
            "license": "${{ github.event.inputs.license }}"
          }
          EOF

      - name: Generate project from cookiecutter
        run: |
          cookiecutter . \
            --config-file cookiecutter_config.json \
            --no-input \
            --output-dir /tmp/cookiecutter-output

      - name: Clear repository contents (preserving .git)
        run: |
          echo "Files to be deleted:"
          # Explicitly preserve .git
          find . -mindepth 1 -maxdepth 1 ! -name '.git' -print ! -name '.github' -print
          
          find . -mindepth 1 -maxdepth 1 \
            ! -name '.git' \
            ! -name '.github' \
            -print0 | xargs -0 rm -rf

      - name: Copy cookiecutter output
        run: |
          # Find the generated directory (assuming single output)
          GENERATED_DIR=$(find /tmp/cookiecutter-output -mindepth 1 -maxdepth 1 -type d | head -n 1)
          if [ -z "$GENERATED_DIR" ]; then
            echo "Error: No generated directory found"
            exit 1
          fi
          
          # Copy all contents from generated directory to repository root
          cp -r "$GENERATED_DIR"/* .
          
          # Copy hidden files if they exist
          if [ -n "$(find "$GENERATED_DIR" -maxdepth 1 -name '.*' -not -name '.' -not -name '..')" ]; then
            cp -r "$GENERATED_DIR"/.* . 2>/dev/null || true
          fi

      - name: Configure Git Action User
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Replace repository with cookiecutter template" \
              -m "Package: ${{ github.event.inputs.package_name }}" \
              -m "Display Name: ${{ github.event.inputs.display_name }}" \
              -m "Version: ${{ github.event.inputs.version }}" \
              -m "Author: ${{ github.event.inputs.author_name }}" \
            
            git push origin ${{ github.ref_name }}
          fi